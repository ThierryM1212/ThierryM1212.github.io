(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./node_modules/ergo-lib-wasm-browser sync recursive":
/*!*************************************************!*\
  !*** ./node_modules/ergo-lib-wasm-browser sync ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/ergo-lib-wasm-browser sync recursive\";\n\n//# sourceURL=webpack:///./node_modules/ergo-lib-wasm-browser_sync?");

/***/ }),

/***/ "./src/ergo-related/explorer.js":
/*!**************************************!*\
  !*** ./src/ergo-related/explorer.js ***!
  \**************************************/
/*! exports provided: trueAddress, explorerApi, currentHeight, unspentBoxesFor, boxById, txById, getSpendingTx, getUnconfirmedTxsFor, getTokenBox, getBalanceFor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trueAddress\", function() { return trueAddress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"explorerApi\", function() { return explorerApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currentHeight\", function() { return currentHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unspentBoxesFor\", function() { return unspentBoxesFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boxById\", function() { return boxById; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"txById\", function() { return txById; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSpendingTx\", function() { return getSpendingTx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUnconfirmedTxsFor\", function() { return getUnconfirmedTxsFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTokenBox\", function() { return getTokenBox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBalanceFor\", function() { return getBalanceFor; });\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rest */ \"./src/ergo-related/rest.js\");\n\r\n\r\nconst trueAddress = '4MQyML64GnzMxZgm'; // dummy address to get unsigned tx from node, we only care about the boxes though in this case\r\nconst explorerApi = 'https://api.ergoplatform.com/api/v0';\r\n\r\nasync function getRequest(url) {\r\n    return Object(_rest__WEBPACK_IMPORTED_MODULE_0__[\"get\"])(explorerApi + url).then(res => {\r\n        return { data: res };\r\n    });\r\n}\r\n\r\nasync function currentHeight() {\r\n    return getRequest('/blocks?limit=1')\r\n        .then(res => res.data)\r\n        .then(res => res.items[0].height);\r\n}\r\n\r\nfunction unspentBoxesFor(address) {\r\n    return getRequest(`/transactions/boxes/byAddress/unspent/${address}`).then(\r\n        (res) => res.data\r\n    );\r\n}\r\n\r\nfunction boxById(id) {\r\n    return getRequest(`/transactions/boxes/${id}`).then((res) => res.data);\r\n}\r\n\r\nfunction txById(id) {\r\n    return getRequest(`/transactions/${id}`).then((res) => res.data);\r\n}\r\n\r\nasync function getSpendingTx(boxId) {\r\n    const data = getRequest(`/transactions/boxes/${boxId}`);\r\n    return data\r\n        .then((res) => res.data)\r\n        .then((res) => res.spentTransactionId)\r\n        .catch((_) => null);\r\n}\r\n\r\nfunction getUnconfirmedTxsFor(addr) {\r\n    return getRequest(\r\n        `/transactions/unconfirmed/byAddress/${addr}`\r\n    )\r\n        .then((res) => res.data)\r\n        .then((res) => res.items);\r\n}\r\n\r\nfunction getTokenBox(addr) {\r\n    return getRequest(\r\n        `/assets/${addr}/issuingBox`\r\n    )\r\n        .then((res) => res.data[0])\r\n}\r\n\r\nfunction getBalanceFor(addr, token = null) {\r\n    return getRequest(\r\n        `/addresses/${addr}`\r\n    )\r\n        .then((res) => res.data)\r\n        .then((res) => res.transactions)\r\n        .then(res => {\r\n            if (!token) return res.confirmedBalance;\r\n            let tok = res.confirmedTokensBalance.filter(tok => tok.tokenId === token);\r\n            if (tok.length === 0) return 0;\r\n            else return tok[0].amount;\r\n        });\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./src/ergo-related/explorer.js?");

/***/ }),

/***/ "./src/ergo-related/rest.js":
/*!**********************************!*\
  !*** ./src/ergo-related/rest.js ***!
  \**********************************/
/*! exports provided: post, get */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"post\", function() { return post; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\nasync function post(url, body = {}, apiKey = '') {\r\n    return await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            api_key: apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n    });\r\n}\r\nasync function get(url, apiKey = '') {\r\n    return await fetch(url, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            api_key: apiKey,\r\n        },\r\n    }).then(res => res.json());\r\n}\r\n\n\n//# sourceURL=webpack:///./src/ergo-related/rest.js?");

/***/ }),

/***/ "./src/ergo-related/serializer.js":
/*!****************************************!*\
  !*** ./src/ergo-related/serializer.js ***!
  \****************************************/
/*! exports provided: encodeNum, decodeNum, encodeHex, encodeStr, decodeString, ergToNano */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeNum\", function() { return encodeNum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeNum\", function() { return decodeNum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeHex\", function() { return encodeHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeStr\", function() { return encodeStr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeString\", function() { return decodeString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ergToNano\", function() { return ergToNano; });\n/* harmony import */ var _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coinbarn/ergo-ts */ \"./node_modules/@coinbarn/ergo-ts/dist/index.js\");\n/* harmony import */ var _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nlet ergolib = Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ergo-lib-wasm-browser */ \"./node_modules/ergo-lib-wasm-browser/ergo_lib_wasm.js\"))\r\n\r\nasync function encodeNum(n, isInt = false) {\r\n    if (isInt) return (await ergolib).Constant.from_i32(n).encode_to_base16()\r\n    else return (await ergolib).Constant.from_i64((await ergolib).I64.from_str(n)).encode_to_base16()\r\n}\r\n\r\nasync function decodeNum(n, isInt = false) {\r\n    if (isInt) return (await ergolib).Constant.decode_from_base16(n).to_i32()\r\n    else return (await ergolib).Constant.decode_from_base16(n).to_i64().to_str()\r\n\r\n}\r\n\r\nasync function encodeHex(reg) {\r\n    return (await ergolib).Constant.from_byte_array(Buffer.from(reg, 'hex')).encode_to_base16()\r\n}\r\n\r\nasync function encodeStr(str) {\r\n    return encodeHex(_coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__[\"Serializer\"].stringToHex(str))\r\n}\r\n\r\nfunction toHexString(byteArray) {\r\n    return Array.from(byteArray, function(byte) {\r\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n    }).join('')\r\n}\r\n\r\nasync function decodeString(encoded) {\r\n    return _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__[\"Serializer\"].stringFromHex(toHexString((await ergolib).Constant.decode_from_base16(encoded).to_byte_array()))\r\n}\r\n\r\nfunction ergToNano(erg) {\r\n    if (erg === undefined) return 0\r\n    if (erg.startsWith('.')) return parseInt(erg.slice(1) + '0'.repeat(9 - erg.length + 1))\r\n    let parts = erg.split('.')\r\n    if (parts.length === 1) parts.push('')\r\n    if (parts[1].length > 9) return 0\r\n    return parseInt(parts[0] + parts[1] + '0'.repeat(9 - parts[1].length))\r\n}\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./src/ergo-related/serializer.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ergo-lib-wasm-browser */ \"./node_modules/ergo-lib-wasm-browser/ergo_lib_wasm.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! json-bigint */ \"./node_modules/json-bigint/index.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(json_bigint__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sweetalert2 */ \"./node_modules/sweetalert2/dist/sweetalert2.all.js\");\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(uuid__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _parseUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parseUtils */ \"./src/parseUtils.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _ergo_related_explorer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ergo-related/explorer */ \"./src/ergo-related/explorer.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NANOERG_TO_ERG = 1000000000;\r\nconst FEE_ADDRESS = \"9hDPCYffeTEAcShngRGNMJsWddCUQLpNzAqwM9hQyx2w6qubmab\";\r\nconst MIN_ERG_AMOUNT = 0.002;\r\nconst DAPP_FEE = 0.001;\r\nconst SIGUSD_TOKENID = \"03faf2cb329f2e90d6d23b58d91bbb6c046aa143261cc21f52fbe2824bfcbf04\";\r\nconst SIGRSV_TOKENID = \"003bd19d0187117f130b62e1bcab0939929ff5c7709f843c5c4dd158949285d0\";\r\nconst GENUINE_TOKENID_LIST = [SIGUSD_TOKENID, SIGRSV_TOKENID];\r\n\r\nfunction setStatus(msg, type) {\r\n    const status = document.getElementById(\"status\");\r\n    status.innerText = msg;\r\n    status.className = \"alert alert-\" + type;\r\n}\r\n\r\nasync function logErrorStatus(e, msg) {\r\n    const s = msg + `: ${JSON.stringify(e)}`;\r\n    console.error(s, e);\r\n    setStatus(s, \"danger\");\r\n}\r\n\r\nasync function setBalance() {\r\n    const connectWalletButton = document.getElementById(\"connect-wallet\");\r\n    ergo.get_balance().then(async function (result) {\r\n        const walletAmount = parseFloat(parseFloat(result) / parseFloat(NANOERG_TO_ERG)).toFixed(3);\r\n        connectWalletButton.innerText = \"Balance: \" + walletAmount + \" ERG\";\r\n    });\r\n}\r\n\r\n// run the form validation\r\nfunction checkFormValidity() {\r\n    const tokenForm = document.getElementById(\"token-form\");\r\n    tokenForm.reportValidity();\r\n    if (!tokenForm.checkValidity()) {\r\n        console.log(\"validation error\");\r\n        return false;\r\n    };\r\n    return true;\r\n}\r\n\r\nasync function connectErgoWallet() {\r\n    ergo_request_read_access().then(function (access_granted) {\r\n        const connectWalletButton = document.getElementById(\"connect-wallet\");\r\n        if (!access_granted) {\r\n            setStatus(\"Wallet access denied\", \"warning\");\r\n            connectWalletButton.onclick = connectErgoWallet;\r\n        } else {\r\n            console.log(\"ergo access given\");\r\n            setStatus(\"Wallet connected\", \"primary\");\r\n\r\n            setBalance().then(async function () {\r\n                var currentLocation = window.location;\r\n                if (currentLocation.toString().includes(\"burn.html\")) {\r\n                    const container = document.getElementById(\"main\");\r\n                    container.removeAttribute(\"hidden\");\r\n                    await loadBurnPage();\r\n                    const burnButton = document.getElementById(\"burn-token\");\r\n                    burnButton.onclick = burnTokens;\r\n                } else {\r\n                    const mintButton = document.getElementById(\"mint-token\");\r\n                    mintButton.onclick = mintTokens;\r\n                }\r\n            }\r\n            );\r\n        }\r\n    });\r\n}\r\n\r\nasync function loadBurnPage() {\r\n    const utxos = await ergo.get_utxos();\r\n    const container = document.getElementById(\"container\");\r\n    var assetsFound = false;\r\n    for (const i in utxos) {\r\n        const jsonUtxo = Object(_parseUtils__WEBPACK_IMPORTED_MODULE_4__[\"parseUtxo\"])(utxos[i]);\r\n        for (var j in jsonUtxo.assets) {\r\n            assetsFound = true;\r\n            const tokenBox = await Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"decodeToken\"])(jsonUtxo.assets[j].tokenId);\r\n            const rowUUID = Object(uuid__WEBPACK_IMPORTED_MODULE_3__[\"v4\"])();\r\n            var html_row = '<div class=\"mb-3 p-2 my-auto w-50\">';\r\n            html_row += '<div class=\"d-flex flex-row\">';\r\n            if (GENUINE_TOKENID_LIST.includes(jsonUtxo.assets[j].tokenId)) { // prevent to burn genuine tokens\r\n                html_row += '<div class=\"flex-child token-name\"><h5><img src=\"../resources/verified_black_24dp.svg\" title=\"Verified\"/>' + tokenBox.name + '</h5></div>';\r\n            } else {\r\n                html_row += '<div class=\"flex-child token-name\"><h5>' + tokenBox.name + '</h5></div>';\r\n            };\r\n            html_row += '<div class=\"flex-child token-amount\"><h5>' + Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"formatTokenAmount\"])(jsonUtxo.assets[j].amount, tokenBox.decimals) + '</h5></div>';\r\n            html_row += '</div>';\r\n            html_row += '<p class=\"h6 text-muted token-id\" title=\"'+jsonUtxo.assets[j].tokenId+'\">' + Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"formatTokenId\"])(jsonUtxo.assets[j].tokenId) + '</p>';\r\n            html_row += '<span hidden>' + tokenBox.decimals + '</span>';\r\n            html_row += '</div>';\r\n            html_row += '<div class=\"mb-3 p-2 my-auto w-25\">';\r\n            if (GENUINE_TOKENID_LIST.includes(jsonUtxo.assets[j].tokenId)) { // prevent to burn genuine tokens\r\n                html_row += '<input class=\"form-control\" value=\"0\" required readonly pattern=\"[0-9\\\\.]+\"/>';\r\n            } else {\r\n                html_row += '<input class=\"form-control\" value=\"0\" required pattern=\"[0-9\\\\.]+\"/>';\r\n            };\r\n            html_row += '</div>';\r\n            html_row += '<div class=\"d-flex flex-row w-25\">';\r\n            if (GENUINE_TOKENID_LIST.includes(jsonUtxo.assets[j].tokenId)) { // prevent to burn genuine tokens\r\n                html_row += '<button type=\"button\" class=\"btn btn-light float-right w-50 h50 m-1\" disabled\">All</button>';\r\n                html_row += '<button type=\"button\" class=\"btn btn-light float-right w-50 h50 m-1\" disabled\">None</button>';\r\n            } else {\r\n                html_row += '<button type=\"button\" class=\"btn btn-light float-right w-50 h50 m-1\" onClick=\"setMaxToken(\\'' + rowUUID + '\\',\\'' + Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"formatTokenAmount\"])(jsonUtxo.assets[j].amount, tokenBox.decimals) + '\\')\">All</button>';\r\n                html_row += '<button type=\"button\" class=\"btn btn-light float-right w-50 h50 m-1\" onClick=\"resetToken(\\'' + rowUUID + '\\')\">None</button>';\r\n            };\r\n            html_row += '</div>';\r\n            var e = document.createElement('div');\r\n            e.setAttribute(\"id\", rowUUID)\r\n            e.className=\"card p-1 d-flex flex-row align-middle\";\r\n            e.innerHTML = html_row;\r\n            container.appendChild(e);\r\n        };\r\n    }\r\n    if (!assetsFound) {\r\n        setStatus(\"No tokens found in the wallet\", \"warning\");\r\n    }\r\n}\r\n\r\nfunction addSimpleOutputBox(outputCandidates, amountErgsFloat, payToAddress, creationHeight) {\r\n    const amountNanoErgStr = Math.round((amountErgsFloat * NANOERG_TO_ERG)).toString();\r\n    const amountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(amountNanoErgStr));\r\n    const outputBoxBuilder = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidateBuilder\"](\r\n        amountBoxValue,\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Contract\"].pay_to_address(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(payToAddress)),\r\n        creationHeight);\r\n    try {\r\n        outputCandidates.add(outputBoxBuilder.build());\r\n    } catch (e) {\r\n        console.log(`building output error: ${e}`);\r\n        throw e;\r\n    }\r\n}\r\n\r\nfunction createTransaction(boxSelection, outputCandidates, creationHeight, changeAddress, utxos) {\r\n    const txBuilder = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].new(\r\n        boxSelection,\r\n        outputCandidates,\r\n        creationHeight,\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE(),\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(changeAddress),\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].SAFE_USER_MIN());\r\n    const dataInputs = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"DataInputs\"]();\r\n    txBuilder.set_data_inputs(dataInputs);\r\n    const tx = Object(_parseUtils__WEBPACK_IMPORTED_MODULE_4__[\"parseUnsignedTx\"])(txBuilder.build().to_json());\r\n    console.log(`tx: ${json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(tx)}`);\r\n\r\n    const correctTx = Object(_parseUtils__WEBPACK_IMPORTED_MODULE_4__[\"parseUnsignedTx\"])(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"UnsignedTransaction\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(tx)).to_json());\r\n    // Put back complete selected inputs in the same order\r\n    correctTx.inputs = correctTx.inputs.map(box => {\r\n        //console.log(`box: ${JSONBigInt.stringify(box)}`);\r\n        const fullBoxInfo = utxos.find(utxo => utxo.boxId === box.boxId);\r\n        return {\r\n            ...fullBoxInfo,\r\n            extension: {}\r\n        };\r\n    });\r\n    console.log(`correctTx tx: ${json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(correctTx)}`);\r\n    return correctTx;\r\n}\r\n\r\nfunction getBoxSelection(utxos, amountFloat, tokens) {\r\n    const amountToSend = Math.round((amountFloat * NANOERG_TO_ERG)).toString();\r\n    const amountToSendBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(amountToSend));\r\n    const selector = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"SimpleBoxSelector\"]();\r\n    let boxSelection = {};\r\n    try {\r\n        boxSelection = selector.select(\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxes\"].from_boxes_json(utxos),\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(amountToSendBoxValue.as_i64().checked_add(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE().as_i64())),\r\n            tokens);\r\n    } catch (e) {\r\n        let msg = \"[Wallet] Error: \"\r\n        if (JSON.stringify(e).includes(\"BoxValue out of bounds\")) {\r\n            msg = msg + \"Increase the Erg amount to process the transaction. \"\r\n        }\r\n        logErrorStatus(e, msg);\r\n        return null;\r\n    }\r\n    return boxSelection;\r\n}\r\n\r\nasync function burnTokens(event) {\r\n    // prevent submit\r\n    event.preventDefault(event);\r\n    if (!checkFormValidity()) {return false;};\r\n\r\n    const creationHeight = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_6__[\"currentHeight\"])();\r\n    const burnerAddress = await ergo.get_change_address();\r\n    const ergs = parseFloat(document.getElementById(\"ergs\").value);\r\n    if (ergs < MIN_ERG_AMOUNT) {\r\n        setStatus(\"Minimal amount to send with tokens is 0.002, please retry with a higher amount.\", \"danger\");\r\n        return null;\r\n    };\r\n    var fee = parseFloat(document.getElementById(\"fee\").value);\r\n    if (fee < DAPP_FEE) {\r\n        fee = DAPP_FEE;\r\n    };\r\n\r\n    // build the list of tokens to burn\r\n    var tokensToBurn = [];\r\n    var tokenIdToburn = [];\r\n    $(\"#container\").find(\".card\").each(function () {\r\n        const tokenId = $(this).find('p')[0].getAttribute(\"title\");\r\n        const decimals = parseInt($(this).find(\"span\")[0].innerText);\r\n        const amountToburn = parseFloat($(this).find(\"input\")[0].value);\r\n        const initialAmount = parseFloat($(this).find(\".token-amount\")[0].innerText.replaceAll(\",\",\"\"));\r\n        var tokAmountToBurn = BigInt(Math.round(amountToburn * Math.pow(10, decimals))).toString();\r\n        const initialTokAmount = BigInt(initialAmount * Math.pow(10, decimals)).toString();\r\n        const tokenName = $(this).find('h5')[0].innerText;\r\n        if (BigInt(tokAmountToBurn) > BigInt(initialTokAmount)) { // if more than the amount burn all\r\n            tokAmountToBurn = initialTokAmount;\r\n        };\r\n        if (BigInt(tokAmountToBurn) > 0) {\r\n            tokensToBurn.push([tokenId, tokAmountToBurn, initialTokAmount, decimals, tokenName]);\r\n            tokenIdToburn.push(tokenId);\r\n        };\r\n    });\r\n    if (tokenIdToburn.length == 0) {\r\n        setStatus(\"No token selected token to be burnt, please select at least one\", \"warning\");\r\n        return null;\r\n    };\r\n    var tokens = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Tokens\"]();\r\n    for (var i in tokensToBurn) {\r\n        tokens.add(new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Token\"](\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_str(tokensToBurn[i][0]),\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(tokensToBurn[i][1]))\r\n        ));\r\n    };\r\n\r\n    // Get all the inputs, filter the required one using the selector\r\n    const utxos = await getAllUtxos();\r\n    const boxSelection = getBoxSelection(utxos, (ergs + fee), tokens);\r\n    if (boxSelection == null) { return null;};\r\n\r\n    // Prepare the output boxes\r\n    const outputCandidates = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidates\"].empty();\r\n    // Add the burner output box\r\n    // don't add the tokens here, let the transaction builder add all the tokens in the change box\r\n    addSimpleOutputBox(outputCandidates, ergs, burnerAddress, creationHeight);\r\n    // Add the fee output box\r\n    addSimpleOutputBox(outputCandidates, fee, FEE_ADDRESS, creationHeight);\r\n\r\n    // Create the transaction\r\n    const correctTx = createTransaction(boxSelection, outputCandidates, creationHeight, burnerAddress, utxos);\r\n\r\n    // Burn the tokens\r\n    for (var i in correctTx.outputs) {\r\n        var newAssets = [];\r\n        for (var j in correctTx.outputs[i].assets) { // Token is to be burnt\r\n            if (tokenIdToburn.includes(correctTx.outputs[i].assets[j].tokenId)) {\r\n                for (var k in tokensToBurn) {\r\n                    if (tokensToBurn[k][0] == correctTx.outputs[i].assets[j].tokenId && BigInt(tokensToBurn[k][1]) < BigInt(tokensToBurn[k][2])) {\r\n                        newAssets.push({\r\n                            \"amount\": (BigInt(tokensToBurn[k][2]) - BigInt(tokensToBurn[k][1])).toString(),\r\n                            \"tokenId\": tokensToBurn[k][0]\r\n                        });\r\n                    } // else dont add the token\r\n                }\r\n            } else { // Not burnt\r\n                newAssets.push(correctTx.outputs[i].assets[j]);\r\n            }\r\n        }\r\n        correctTx.outputs[i].assets = newAssets;\r\n    }\r\n\r\n    // Send transaction for signing\r\n    setStatus(\"Awaiting transaction signing\", \"primary\");\r\n    var message = \"Please review the transaction that burn tokens in Yoroi wallet before signing it.<br/>\";\r\n    message += \"Tokens burnt:\";\r\n    message += \"<div class=\\\"mb3 p-2 my-auto \\\"\\\">\";\r\n    for (var i in tokensToBurn) { // tokenId, tokAmountToBurn, initialTokAmount, decimals, tokenName\r\n        message += \"<div class=\\\"d-flex flex-row\\\"><div class=\\\"flex-child token-name float-left\\\"><h5>\" + tokensToBurn[i][4] + \r\n        \"</h5></div><div class=\\\"flex-child token-amount float-right\\\"><h5>- \" + Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"formatTokenAmount\"])(tokensToBurn[i][1], tokensToBurn[i][3]) + \"</h5></div></div>\"\r\n    };\r\n    message += \"<div/>\";\r\n    message +=  \"<br/>The transactions on blockchain cannot be reverted nor cancelled once sent.\"\r\n    displayAwaitTransactionAlert(\"Awaiting transaction signing\", message);\r\n    console.log(`${json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(correctTx)}`);\r\n    processTx(correctTx).\r\n    then(txId => {\r\n        sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.close();\r\n        console.log('[txId]', txId);\r\n        if (txId) {\r\n            displayTxId(txId);\r\n            sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({\r\n                title: 'Transaction successfully sent, waiting for it reaches the explorer',\r\n                icon: 'success',\r\n                timer: 10000,\r\n                timerProgressBar: true\r\n            });\r\n            tokenForm.reset();\r\n        };\r\n    });\r\n    return false;\r\n}\r\n\r\nasync function mintTokens(event) {\r\n    // prevent submit\r\n    event.preventDefault(event);\r\n    if (!checkFormValidity()) {return false;};\r\n    // set constants\r\n    const creationHeight = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_6__[\"currentHeight\"])();\r\n    const minterAddress = await ergo.get_change_address();\r\n\r\n    //get the inputs\r\n    const ergs = parseFloat(document.getElementById(\"ergs\").value);\r\n    if (ergs < 0.002) {\r\n        setStatus(\"Minimal amount to send with tokens is 0.002, please retry with a higher amount.\", \"danger\");\r\n        return null;\r\n    }\r\n    var fee = parseFloat(document.getElementById(\"fee\").value);\r\n    if (ergs < 0.001) {\r\n        fee = 0.001;\r\n    }\r\n    const tokenAmount = document.getElementById(\"quantity\").value;\r\n    const decimals = document.getElementById(\"decimals\").value;\r\n    const tokenAmountAdjusted = BigInt(tokenAmount * Math.pow(10, decimals)).toString();\r\n    const name = document.getElementById(\"name\").value;\r\n    const description = document.getElementById(\"description\").value;\r\n    // console.log(tokenAmountAdjusted, decimals, name, description, ergs, fee);\r\n\r\n    // Get the input boxes from the connected wallet\r\n    const utxos = await getUtxosForAmount(ergs + fee);\r\n    const tokens = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Tokens\"]();\r\n    const boxSelection = getBoxSelection(utxos, (ergs + fee), tokens);\r\n    if (boxSelection == null) { return null;};\r\n\r\n    // Build the output boxes\r\n    const outputCandidates = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidates\"].empty();\r\n\r\n    // prepare the box for the minted tokens\r\n    const ergsStr = (ergs * NANOERG_TO_ERG).toString();\r\n    const ergsAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(ergsStr.toString()));\r\n\r\n    // Create the new token using the last boxid\r\n    const token = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Token\"](\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_box_id(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxId\"].from_str(utxos[utxos.length - 1].boxId)),\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(tokenAmountAdjusted)));\r\n    const minterBoxBuilder = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidateBuilder\"](\r\n        ergsAmountBoxValue,\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Contract\"].pay_to_address(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(minterAddress)),\r\n        creationHeight);\r\n    minterBoxBuilder.mint_token(token, name, description, decimals);\r\n    try {\r\n        outputCandidates.add(minterBoxBuilder.build());\r\n    } catch (e) {\r\n        logErrorStatus(e, \"minterBox building error\");\r\n        return null;\r\n    }\r\n\r\n    // Add the fee output box\r\n    addSimpleOutputBox(outputCandidates, fee, FEE_ADDRESS, creationHeight);\r\n    // Create the transaction \r\n    const correctTx = createTransaction(boxSelection, outputCandidates, creationHeight, minterAddress, utxos);\r\n    // Send transaction for signing\r\n    setStatus(\"Awaiting transaction signing\", \"primary\");\r\n\r\n    var message = \"Please review the transaction that mint tokens in Yoroi wallet before signing it.\"+\"<br/>\";\r\n        message += \"Tokens minted:\";\r\n        message += \"<div class=\\\"d-flex flex-row \\\"><div class=\\\"flex-child token-name \\\"><h5>\" + name + \r\n            \"</h5></div><div class=\\\"flex-child token-amount \\\"><h5>\" + Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"formatTokenAmount\"])(tokenAmountAdjusted, decimals) + \"</h5></div></div>\";\r\n        message += \"<div class=\\\"d-flex flex-row\\\"><div class=\\\"flex-child token-name \\\"><h5>ERGs sent:\" +\r\n        \"</h5></div><div class=\\\"flex-child token-amount \\\"><h5>\" + ergs.toFixed(4) + \"</h5></div></div>\";\r\n        message += \"<div class=\\\"d-flex flex-row\\\"><div class=\\\"flex-child token-name \\\"><h5>dApp fee:\" +\r\n        \"</h5></div><div class=\\\"flex-child token-amount \\\"><h5>\" + fee.toFixed(4) + \"</h5></div></div>\";\r\n        message +=  \"<br/>The transactions on blockchain cannot be reverted nor cancelled once sent.\"\r\n\r\n    displayAwaitTransactionAlert('Awaiting transaction signing', message);\r\n    console.log(`${json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(correctTx)}`);\r\n    processTx(correctTx).then(txId => {\r\n        sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.close();\r\n        console.log('[txId]', txId);\r\n        if (txId) {\r\n            displayTxId(txId);\r\n            sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({\r\n                title: 'Transaction successfully sent, waiting for it reaches the explorer',\r\n                icon: 'success',\r\n                timer: 10000,\r\n                timerProgressBar: true\r\n            });\r\n            const tokenForm = document.getElementById(\"token-form\");\r\n            tokenForm.reset();\r\n        }\r\n        setBalance();\r\n    });\r\n    return false;\r\n}\r\n\r\nfunction displayAwaitTransactionAlert (title, message) {\r\nsweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.fire({\r\n        title: title,\r\n        html: message,\r\n        allowOutsideClick: false,\r\n        showConfirmButton: false,\r\n        imageUrl: '../resources/Spin-1.5s-94px.svg',\r\n        onBeforeOpen: () => {\r\n            sweetalert2__WEBPACK_IMPORTED_MODULE_2___default.a.showLoading() \r\n        },\r\n    });\r\n}\r\n\r\nasync function getAllUtxos() {\r\n    const filteredUtxos = [];\r\n    const utxos = await ergo.get_utxos();\r\n    for (const utxo of utxos) {\r\n        try {\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBox\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(utxo));\r\n            filteredUtxos.push(utxo);\r\n        } catch (e) {\r\n            logErrorStatus(e, \"[getAllUtxos] UTxO failed parsing:\");\r\n            return null;\r\n        }\r\n    }\r\n    return filteredUtxos;\r\n}\r\n\r\nasync function getUtxosForAmount(amountFloat) {\r\n    const amountNano = BigInt(Math.round(amountFloat * NANOERG_TO_ERG));\r\n    const fee = BigInt(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE().as_i64().to_str());\r\n    const fullAmountToSend = amountNano + fee;\r\n    const filteredUtxos = [];\r\n    const utxos = await ergo.get_utxos(fullAmountToSend.toString());\r\n    for (const utxo of utxos) {\r\n        try {\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBox\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(utxo));\r\n            filteredUtxos.push(utxo);\r\n        } catch (e) {\r\n            logErrorStatus(e, \"[getUtxos] UTxO failed parsing:\");\r\n            return null;\r\n        }\r\n    }\r\n    return filteredUtxos;\r\n}\r\n\r\nasync function signTx(txToBeSigned) {\r\n    try {\r\n        return await ergo.sign_tx(txToBeSigned);\r\n    } catch (e) {\r\n        logErrorStatus(e, \"[signTx] Error\");\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function submitTx(txToBeSubmitted) {\r\n    try {\r\n        return await ergo.submit_tx(txToBeSubmitted);\r\n    } catch (e) {\r\n        logErrorStatus(e, \"[submitTx] Error\");\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function processTx(txToBeProcessed) {\r\n    const msg = s => {\r\n        console.log('[processTx]', s);\r\n        setStatus(s, \"primary\");\r\n    };\r\n    const signedTx = await signTx(txToBeProcessed);\r\n    if (!signedTx) {\r\n        console.error(`No signed transaction found`);\r\n        return null;\r\n    }\r\n    msg(\"Transaction signed - awaiting submission\");\r\n    const txId = await submitTx(signedTx);\r\n    if (!txId) {\r\n        console.log(`No submitted tx ID`);\r\n        return null;\r\n    }\r\n    msg(\"Transaction submitted \");\r\n    return txId;\r\n}\r\n\r\nfunction displayTxId(txId) {\r\n    const status = document.getElementById(\"status\");\r\n    const cr = document.createElement(\"br\");\r\n    const txTracker = document.createElement(\"a\");\r\n    txTracker.appendChild(document.createTextNode(`View transaction in explorer: ${txId}`));\r\n    txTracker.href = `https://explorer.ergoplatform.com/en/transactions/${txId}`;\r\n    txTracker.target = \"_blank\"\r\n    status.appendChild(cr);\r\n    status.appendChild(txTracker);\r\n    status.className = \"alert alert-primary\";\r\n}\r\n\r\n// INIT page\r\n\r\nif (typeof ergo_request_read_access === \"undefined\") {\r\n    setStatus(\"Yorio ergo dApp not found, install the extension\", \"warning\");\r\n} else {\r\n    console.log(\"Yorio ergo dApp found\");\r\n    window.addEventListener(\"ergo_wallet_disconnected\", function (event) {\r\n        const connectWalletButton = document.getElementById(\"connect-wallet\");\r\n        connectWalletButton.value = \"Connect wallet\";\r\n        connectWalletButton.onclick = connectErgoWallet;\r\n        setStatus(\"Ergo wallet disconnected\", \"warning\");\r\n        const container = document.getElementById(\"main\");\r\n        container.addAttribute(\"hidden\");\r\n    });\r\n    connectErgoWallet();\r\n}\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/parseUtils.js":
/*!***************************!*\
  !*** ./src/parseUtils.js ***!
  \***************************/
/*! exports provided: parseUnsignedTx, parseUtxo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseUnsignedTx\", function() { return parseUnsignedTx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseUtxo\", function() { return parseUtxo; });\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! json-bigint */ \"./node_modules/json-bigint/index.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(json_bigint__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n\r\nfunction parseUnsignedTx(str) {\r\n    let json = json_bigint__WEBPACK_IMPORTED_MODULE_0___default.a.parse(str);\r\n    return {\r\n        id: json.id,\r\n        inputs: json.inputs,\r\n        dataInputs: json.dataInputs,\r\n        outputs: json.outputs.map(output => (parseUtxo(output))),\r\n    };\r\n}\r\nfunction parseUtxo(json) {\r\n    return {\r\n        boxId: json.boxId,\r\n        value: json.value.toString(),\r\n        ergoTree: json.ergoTree,\r\n        assets: json.assets.map(asset => ({\r\n            tokenId: asset.tokenId,\r\n            amount: asset.amount.toString(),\r\n        })),\r\n        additionalRegisters: json.additionalRegisters,\r\n        creationHeight: json.creationHeight,\r\n        transactionId: json.transactionId,\r\n        index: json.index\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack:///./src/parseUtils.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: formatTokenAmount, formatTokenId, decodeToken */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatTokenAmount\", function() { return formatTokenAmount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatTokenId\", function() { return formatTokenId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeToken\", function() { return decodeToken; });\n/* harmony import */ var _ergo_related_serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ergo-related/serializer */ \"./src/ergo-related/serializer.js\");\n/* harmony import */ var _ergo_related_explorer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ergo-related/explorer */ \"./src/ergo-related/explorer.js\");\n\r\n\r\n\r\n\r\n// return formatted token amount like 6,222,444.420\r\n// amountInt: number of token as provided in utxo (to be divided by 10^decimals)\r\n// decimalsInt: number of decimals of te token\r\nfunction formatTokenAmount(amountInt, decimalsInt) {\r\n    if (decimalsInt > 0) {\r\n        const numberAmount = (Number(amountInt)/Number(Math.pow(10, parseInt(decimalsInt)))).toFixed(parseInt(decimalsInt));\r\n        var str = numberAmount.toString().split(\".\");\r\n        str[0] = str[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        return str.join(\".\");\r\n    } else {\r\n        return amountInt.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");;\r\n    }\r\n}\r\n\r\n// return shortened string of the token id\r\nfunction formatTokenId(tokenId) {\r\n    return tokenId.substring(0,10)+'...'+tokenId.substring(tokenId.length-10,tokenId.length)\r\n}\r\n\r\n// return token details\r\nasync function decodeToken(tokenId) {\r\n    let box = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_1__[\"getTokenBox\"])(tokenId)\r\n    if (!box) return\r\n    let name = await Object(_ergo_related_serializer__WEBPACK_IMPORTED_MODULE_0__[\"decodeString\"])(box.additionalRegisters.R4)\r\n    let description = await Object(_ergo_related_serializer__WEBPACK_IMPORTED_MODULE_0__[\"decodeString\"])(box.additionalRegisters.R5)\r\n    let decimals = await Object(_ergo_related_serializer__WEBPACK_IMPORTED_MODULE_0__[\"decodeString\"])(box.additionalRegisters.R6)\r\n    return ({ name: name, description: description, decimals: decimals })\r\n}\r\n\n\n//# sourceURL=webpack:///./src/utils.js?");

/***/ }),

/***/ 0:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///buffer_(ignored)?");

/***/ }),

/***/ 1:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?");

/***/ }),

/***/ 2:
/*!********************************!*\
  !*** ./util.inspect (ignored) ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///./util.inspect_(ignored)?");

/***/ }),

/***/ 3:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///buffer_(ignored)?");

/***/ }),

/***/ 4:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?");

/***/ })

}]);